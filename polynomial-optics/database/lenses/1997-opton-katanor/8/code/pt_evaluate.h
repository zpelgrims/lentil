case opton__katanor__1997__8mm:
{
out[0] =  + 7.22481 *dx + -3.66916 *x + 1.13935 *dx*lambda + -0.107979 *x*lambda + 0.0497219 *lens_ipow(y, 2)*dx + 0.0849807 *x*lens_ipow(dx, 2) + 0.00600088 *x*lens_ipow(y, 2) + 0.00624019 *lens_ipow(x, 3) + 0.177711 *x*y*dy*lambda + 0.210299 *lens_ipow(x, 2)*dx*lambda + -0.161629 *x*y*dy*lens_ipow(lambda, 2) + -0.171108 *x*y*lens_ipow(dy, 3) + -0.3263 *x*y*lens_ipow(dx, 2)*dy + 0.000736275 *x*lens_ipow(y, 3)*dy + -5.92794e-05 *x*lens_ipow(y, 4) + 0.00134687 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx + 0.00075912 *lens_ipow(x, 3)*y*dy + -0.000124396 *lens_ipow(x, 3)*lens_ipow(y, 2) + 0.00117025 *lens_ipow(x, 4)*dx + -0.233864 *lens_ipow(x, 2)*dx*lens_ipow(lambda, 3) + -0.000239904 *lens_ipow(x, 5)*lambda + 0.000219276 *lens_ipow(x, 5)*lens_ipow(lambda, 2) + 224.685 *lens_ipow(dx, 9) + -35.8209 *y*dx*lens_ipow(dy, 7) + -220.156 *y*lens_ipow(dx, 5)*lens_ipow(dy, 3) + 0.0252482 *lens_ipow(y, 4)*lens_ipow(dx, 5) + -170.111 *x*lens_ipow(dx, 6)*lens_ipow(dy, 2) + 2141.21 *lens_ipow(dx, 3)*lens_ipow(dy, 6)*lambda;
out[1] =  + 7.35994 *dy + -3.66475 *y + 1.1629 *dy*lambda + -0.101463 *y*lambda + -2.19358 *lens_ipow(dy, 3) + 0.00565994 *lens_ipow(y, 3) + 0.0471934 *lens_ipow(x, 2)*dy + 0.00448502 *lens_ipow(x, 2)*y + 0.186474 *lens_ipow(y, 2)*dy*lambda + 0.105916 *x*y*dx*lambda + 0.00125623 *lens_ipow(y, 4)*dy + 0.00156435 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy + -0.203183 *lens_ipow(y, 2)*dy*lens_ipow(lambda, 3) + -0.000203478 *lens_ipow(y, 5)*lambda + -0.709852 *x*y*dx*lens_ipow(dy, 2)*lambda + 78.5292 *lens_ipow(dy, 7) + 0.00018357 *lens_ipow(y, 5)*lens_ipow(lambda, 2) + -0.524387 *x*y*lens_ipow(dx, 3)*lens_ipow(lambda, 2) + -2.13244e-06 *lens_ipow(x, 2)*lens_ipow(y, 5) + 5.95196e-05 *lens_ipow(x, 3)*lens_ipow(y, 3)*dx + -2.28766e-06 *lens_ipow(x, 4)*lens_ipow(y, 3) + -6.83984e-07 *lens_ipow(x, 6)*y + -165.431 *y*lens_ipow(dx, 2)*lens_ipow(dy, 6) + -245.723 *x*lens_ipow(dx, 3)*lens_ipow(dy, 5) + -29.6761 *x*lens_ipow(dx, 7)*dy + -1.38489e-05 *x*lens_ipow(y, 6)*dx*dy + 0.0286787 *lens_ipow(x, 4)*lens_ipow(dy, 5) + 2186.56 *lens_ipow(dx, 6)*lens_ipow(dy, 3)*lambda;
out[2] =  + -0.13587 *dx + -0.066524 *x + 0.0130168 *dx*lambda + 0.00465117 *x*lambda + 0.0406427 *dx*lens_ipow(dy, 2) + 0.027374 *lens_ipow(dx, 3) + 0.000251407 *x*lens_ipow(y, 2) + -0.000869781 *lens_ipow(x, 2)*dx + 0.000355825 *lens_ipow(x, 3) + -0.00161326 *x*y*dy*lambda + 0.413343 *dx*lens_ipow(dy, 4) + 0.784638 *lens_ipow(dx, 3)*lens_ipow(dy, 2) + 0.421791 *lens_ipow(dx, 5) + 0.00225631 *lens_ipow(y, 2)*lens_ipow(dx, 3) + -3.99103e-06 *lens_ipow(y, 4)*dx + -0.0044946 *x*y*lens_ipow(dx, 2)*dy + -2.82341e-05 *x*lens_ipow(y, 3)*dy + 1.49506e-06 *x*lens_ipow(y, 4) + -3.5227e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx + -2.90841e-05 *lens_ipow(x, 3)*y*dy + 2.63178e-06 *lens_ipow(x, 3)*lens_ipow(y, 2) + -2.8845e-05 *lens_ipow(x, 4)*dx + 9.37519e-07 *lens_ipow(x, 5) + 0.00192499 *x*y*dy*lens_ipow(lambda, 3) + -0.00677485 *x*y*lens_ipow(dy, 5) + -0.000105174 *x*lens_ipow(y, 2)*lens_ipow(lambda, 5) + -0.000109281 *lens_ipow(x, 3)*lens_ipow(lambda, 5) + -0.000948575 *lens_ipow(x, 4)*lens_ipow(dx, 7);
out[3] =  + -0.136414 *dy + -0.0666188 *y + 0.0127708 *dy*lambda + 0.00457627 *y*lambda + 0.0495904 *lens_ipow(dy, 3) + 0.117236 *lens_ipow(dx, 2)*dy + -0.00204596 *y*lens_ipow(dx, 2) + -0.000867126 *lens_ipow(y, 2)*dy + 0.000379246 *lens_ipow(y, 3) + -0.000611837 *lens_ipow(x, 2)*dy + 0.000477685 *lens_ipow(x, 2)*y + -0.00440404 *x*y*dx*lambda + 0.320002 *lens_ipow(dy, 5) + -3.03489e-05 *lens_ipow(y, 4)*dy + 0.00405186 *x*y*dx*lens_ipow(lambda, 2) + 0.00237707 *lens_ipow(x, 2)*lens_ipow(dy, 3) + -3.25788e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy + 2.33356 *lens_ipow(dx, 2)*lens_ipow(dy, 5) + 1.04051e-08 *lens_ipow(y, 7) + -0.0101119 *x*y*lens_ipow(dx, 5) + -4.59191e-07 *x*lens_ipow(y, 5)*dx + 3.03579e-08 *lens_ipow(x, 2)*lens_ipow(y, 5) + -0.000204388 *lens_ipow(x, 3)*y*dx*lens_ipow(dy, 2) + -0.000102521 *lens_ipow(y, 3)*lens_ipow(lambda, 5) + -0.00010398 *lens_ipow(x, 2)*y*lens_ipow(lambda, 5) + -4.21288e-08 *lens_ipow(x, 5)*lens_ipow(y, 3)*dx + -15.3524 *x*lens_ipow(dx, 7)*lens_ipow(dy, 3) + -0.022289 *x*lens_ipow(y, 3)*lens_ipow(dx, 3)*lens_ipow(dy, 4);
out_transmittance =  + -0.0818696  + 1.31494 *lambda + -2.60344 *lens_ipow(lambda, 2) + -0.000664144 *y*dy + -0.000551075 *x*dx + 2.45113 *lens_ipow(lambda, 3) + -0.900521 *lens_ipow(lambda, 4) + -0.105226 *lens_ipow(dy, 4) + -0.21402 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.1052 *lens_ipow(dx, 4) + -0.000367576 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -2.59867e-06 *lens_ipow(y, 4) + -0.000391611 *x*y*dx*dy + -5.23038e-06 *lens_ipow(x, 2)*lens_ipow(y, 2) + -2.67358e-06 *lens_ipow(x, 4) + -0.0006847 *lens_ipow(x, 2)*lens_ipow(dx, 2)*lambda + -1.4906e-05 *lens_ipow(x, 3)*dx*lambda + -0.0314894 *y*lens_ipow(dy, 5) + -0.000161724 *lens_ipow(y, 3)*lens_ipow(dx, 2)*dy + -0.0310621 *x*dx*lens_ipow(dy, 4) + -0.0301986 *x*lens_ipow(dx, 5) + -7.15797e-06 *lens_ipow(y, 4)*lens_ipow(dx, 2)*lambda + -0.00145141 *lens_ipow(x, 2)*lens_ipow(dy, 4)*lambda + -0.764751 *lens_ipow(dy, 8) + -0.81172 *lens_ipow(dx, 8) + -36.3476 *lens_ipow(dx, 6)*lens_ipow(dy, 4) + 0.452695 *x*y*lens_ipow(dx, 5)*lens_ipow(dy, 3) + -17.8266 *lens_ipow(dx, 2)*lens_ipow(dy, 8)*lambda;
} break;
